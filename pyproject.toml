[project]
name = "healthfinder"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
# Runtime dependencies for the FastAPI backend
dependencies = [
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.29.0",
    "pydantic>=2.7.0",
    "sqlalchemy>=2.0.30",
    "databases[sqlite]>=0.9.0",
    "asyncpg>=0.29.0", # Postgres driver (optional runtime)
    "python-dotenv>=1.0.1",
    "loguru>=0.7.2",
    "httpx>=0.27.0",
    "passlib[bcrypt]>=1.7.4", # password hashing (future-proof)
    "python-jose[cryptography]>=3.3.0", # JWT handling
    "PyJWT[crypto]>=2.8.0", # JWT encoding/decoding
    "email-validator>=2.0.0", # Required by Pydantic for EmailStr fields
    "bcrypt>=4.1.3", # BioMCP SDK integration
    "llama-index>=0.12.44",
    "biomcp-python>=0.3.3",
    "llama-index-core>=0.12.44",
    "llama-index-workflows>=1.0.1",
    "pydantic-settings>=2.0.0",
    "llama-index-llms-openai>=0.2.0",
    "llama-index-embeddings-openai>=0.2.0",
    "llama-index-tools-requests>=0.1.0",
    "duckduckgo-search>=6.3.0",
    "pytest-cov>=6.2.1",
]

[project.optional-dependencies]
test = [
    "pytest>=8.2.1",
    "pytest-asyncio>=0.23.7",
    "pytest-mock>=3.14.0",
    "coverage>=7.5.3",
]
dev = [
    "black>=24.4.2",
    "isort>=5.13.2",
    "mypy>=1.10.0",
    "ruff>=0.4.7",
    "pre-commit>=3.7.0",
]

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-mock>=3.14.1",
]

[tool.pytest.ini_options]
testpaths = ["server/tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PydanticDeprecatedSince20",
    "ignore::PydanticDeprecatedSince211"
]
markers = [
    "api: marks tests as API tests",
    "chat: marks tests as chat functionality tests",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests",
    "unit: marks tests as unit tests",
    "slow: marks tests as slow running tests",
    "agents: marks tests as agent-related tests",
    "models: marks tests as model tests",
    "tools: marks tests as tool tests",
    "workflows: marks tests as workflow tests",
    "security: marks tests as security tests",
    "edge_cases: marks tests as edge case tests",
    "providers: Tests related to provider functionality",
    "nppes: Tests related to NPPES API functionality",
    "auth: Tests related to authentication",
    "clients: Tests related to external client integrations",
    "core: Tests related to core functionality",
    "smoke: Quick smoke tests for basic functionality"
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
